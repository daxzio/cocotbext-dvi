name: Test dvi

on: 
  push: 
  pull_request:
  schedule:
    - cron: '0 1 * * 0'
jobs:
  run_lint:
    strategy:
      fail-fast: false # So that one fail doesn't stop remaining tests
    runs-on: ubuntu-latest      
    
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade -r requirements.txt
      - name: Run lint
        continue-on-error: true
        run: |
          pyflakes cocotbext
 
  build_iverilog_linux:
    #uses: daxzio/setup-eda/.github/workflows/setup_iverilog.yml@main
    uses: ./.github/workflows/setup_iverilog.yml

  build_release:

    strategy:
      fail-fast: false # So that one fail doesn't stop remaining tests
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    runs-on: ubuntu-latest
    needs: [run_lint, build_iverilog_linux]

    steps:
      - uses: actions/checkout@v3
      - name: Report Environment
        run: |
          echo "Runing tests with env set to : ${{ matrix.target }}"
      - name: Cache Icarus
        uses: actions/cache@v3
        with:
          path: ${{ needs.build_iverilog_linux.outputs.cache_dir }}
          key: ${{ needs.build_iverilog_linux.outputs.cache_key }}
      - name: Add to PATH
        run: |
          echo "${{ needs.build_iverilog_linux.outputs.cache_dir }}/bin" >> $GITHUB_PATH
      - name: Install depenacy for ghdl
        uses: ghdl/setup-ghdl@v1
        with:
          version: nightly
          backend: llvm
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Compile Unisim
        run: |
          make gpg_untar PASSPHRASE=${{ secrets.PASSPHRASE }}
          make compile_unisim
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade -r requirements.txt
          python -m pip install .
      - name: Run Tests
        run: |
          make
  
  build_main:

    strategy:
      fail-fast: false # So that one fail doesn't stop remaining tests
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    runs-on: ubuntu-latest
    needs: [run_lint, build_iverilog_linux]
        
    steps:
      - uses: actions/checkout@v3
      - name: Report Environment
        run: |
          echo "Runing tests with env set to : ${{ matrix.target }}"
      - name: Cache Icarus
        uses: actions/cache@v3
        with:
          path: ${{ needs.build_iverilog_linux.outputs.cache_dir }}
          key: ${{ needs.build_iverilog_linux.outputs.cache_key }}
      - name: Add to PATH
        run: |
          echo "${{ needs.build_iverilog_linux.outputs.cache_dir }}/bin" >> $GITHUB_PATH
      - name: Install depenacy for ghdl
        uses: ghdl/setup-ghdl@v1
        with:
          version: nightly
          backend: llvm
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade -r requirements.txt
          python -m pip uninstall -y cocotb cocotb-bus
          python -m pip install --upgrade git+https://github.com/cocotb/cocotb.git
          python -m pip install --upgrade git+https://github.com/cocotb/cocotb-bus.git
          python -m pip install .
      - name: Compile Unisim
        run: |
          make gpg_untar PASSPHRASE=${{ secrets.PASSPHRASE }}
          make compile_unisim
      - name: Run Tests
#         continue-on-error: true
        run: |
          make
  
  pypy_release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: [build_release]
    steps:
      - uses: actions/checkout@v3
      - name: Make PyPi dist release
        run: make dist
      - name: Publish Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
